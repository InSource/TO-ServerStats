const ui = {
	init() {
		const self = this;

		const $form = document.getElementById('queryForm');
		self.settings.$form  = $form;
		self.settings.$host  = $form.elements.ip;
		self.settings.$port  = $form.elements.port;
		self.settings.$mode  = $form.elements.mode;
		self.settings.$icons = $form.elements.icons;
		self.settings.$ranks = $form.elements.ranks;
		self.settings.$rate  = $form.elements.rate;

		self.settings.$mode.onchange = function(e) {
			if (this.value.includes('legacy')) {
				self.settings.$rate.min = 10;
				self.settings.$rate.max = 60;
				self.settings.$rate.value = 15;
			} else {
				self.settings.$rate.min = 1;
				self.settings.$rate.max = 20;
				self.settings.$rate.value = 2;
			}
		}

		self.settings.$form.onsubmit = function(e) {
			e.preventDefault();
			self.url.copy();
		}

		self.preview.$iframe = document.querySelector('#preview iframe');
		self.preview.$showBtn = document.getElementById('showPreview');

		self.preview.$showBtn.onclick = function(e) {
			self.preview.show(self.url.get());
		};
	},

	url: {
		get() {
			const {ip, port, type, mode, icons, ranks, rate} = ui.settings.getParams();
			const params = {ip, port, timeout: rate, mode};
			if (icons) { params.icons = true; }
			if (ranks) { params.ranks = true; }
			return `${location.href}/../obs_${type}_overlay.html?${new URLSearchParams(params)}`;
		},

		copy() {
			console.log(this.get());
			navigator.clipboard.writeText(this.get());
		},
	},

	settings: {
		$form   : null,
		$host   : null,
		$port   : null,
		$mode   : null,
		$icons  : null,
		$ranks  : null,
		$rate   : null,

		getParams() {
			const [type, mode] = this.$mode.value.split('-');
			return {
				ip    : this.$host.value,
				port  : this.$port.value,
				type,
				mode,
				icons : this.$icons.checked,
				ranks : this.$ranks.checked,
				rate  : this.$rate.value,
			};
		},
	},

	preview: {
		$iframe: null,
		$showBtn: null,

		show(url) {
			this.$iframe.src = url;
		}
	},
};

class Countries {
	static list = {
		AC: ['Ascension Island', 'ğŸ‡¦ğŸ‡¨'],
		AD: ['Andorra', 'ğŸ‡¦ğŸ‡©'],
		AE: ['United Arab Emirates', 'ğŸ‡¦ğŸ‡ª'],
		AF: ['Afghanistan', 'ğŸ‡¦ğŸ‡«'],
		AG: ['Antigua & Barbuda', 'ğŸ‡¦ğŸ‡¬'],
		AI: ['Anguilla', 'ğŸ‡¦ğŸ‡®'],
		AL: ['Albania', 'ğŸ‡¦ğŸ‡±'],
		AM: ['Armenia', 'ğŸ‡¦ğŸ‡²'],
		AO: ['Angola', 'ğŸ‡¦ğŸ‡´'],
		AQ: ['Antarctica', 'ğŸ‡¦ğŸ‡¶'],
		AR: ['Argentina', 'ğŸ‡¦ğŸ‡·'],
		AS: ['American Samoa', 'ğŸ‡¦ğŸ‡¸'],
		AT: ['Austria', 'ğŸ‡¦ğŸ‡¹'],
		AU: ['Australia', 'ğŸ‡¦ğŸ‡º'],
		AW: ['Aruba', 'ğŸ‡¦ğŸ‡¼'],
		AX: ['Ã…land Islands', 'ğŸ‡¦ğŸ‡½'],
		AZ: ['Azerbaijan', 'ğŸ‡¦ğŸ‡¿'],
		BA: ['Bosnia & Herzegovina', 'ğŸ‡§ğŸ‡¦'],
		BB: ['Barbados', 'ğŸ‡§ğŸ‡§'],
		BD: ['Bangladesh', 'ğŸ‡§ğŸ‡©'],
		BE: ['Belgium', 'ğŸ‡§ğŸ‡ª'],
		BF: ['Burkina Faso', 'ğŸ‡§ğŸ‡«'],
		BG: ['Bulgaria', 'ğŸ‡§ğŸ‡¬'],
		BH: ['Bahrain', 'ğŸ‡§ğŸ‡­'],
		BI: ['Burundi', 'ğŸ‡§ğŸ‡®'],
		BJ: ['Benin', 'ğŸ‡§ğŸ‡¯'],
		BL: ['St. BarthÃ©lemy', 'ğŸ‡§ğŸ‡±'],
		BM: ['Bermuda', 'ğŸ‡§ğŸ‡²'],
		BN: ['Brunei', 'ğŸ‡§ğŸ‡³'],
		BO: ['Bolivia', 'ğŸ‡§ğŸ‡´'],
		BQ: ['Caribbean Netherlands', 'ğŸ‡§ğŸ‡¶'],
		BR: ['Brazil', 'ğŸ‡§ğŸ‡·'],
		BS: ['Bahamas', 'ğŸ‡§ğŸ‡¸'],
		BT: ['Bhutan', 'ğŸ‡§ğŸ‡¹'],
		BV: ['Bouvet Island', 'ğŸ‡§ğŸ‡»'],
		BW: ['Botswana', 'ğŸ‡§ğŸ‡¼'],
		BY: ['Belarus', 'ğŸ‡§ğŸ‡¾'],
		BZ: ['Belize', 'ğŸ‡§ğŸ‡¿'],
		CA: ['Canada', 'ğŸ‡¨ğŸ‡¦'],
		CC: ['Cocos (Keeling) Islands', 'ğŸ‡¨ğŸ‡¨'],
		CD: ['Congo - Kinshasa', 'ğŸ‡¨ğŸ‡©'],
		CF: ['Central African Republic', 'ğŸ‡¨ğŸ‡«'],
		CG: ['Congo - Brazzaville', 'ğŸ‡¨ğŸ‡¬'],
		CH: ['Switzerland', 'ğŸ‡¨ğŸ‡­'],
		CI: ['CÃ´te d\'Ivoire', 'ğŸ‡¨ğŸ‡®'],
		CK: ['Cook Islands', 'ğŸ‡¨ğŸ‡°'],
		CL: ['Chile', 'ğŸ‡¨ğŸ‡±'],
		CM: ['Cameroon', 'ğŸ‡¨ğŸ‡²'],
		CN: ['China', 'ğŸ‡¨ğŸ‡³'],
		CO: ['Colombia', 'ğŸ‡¨ğŸ‡´'],
		CP: ['Clipperton Island', 'ğŸ‡¨ğŸ‡µ'],
		CQ: ['Sark[A]', 'ğŸ‡¨ğŸ‡¶'],
		CR: ['Costa Rica', 'ğŸ‡¨ğŸ‡·'],
		CU: ['Cuba', 'ğŸ‡¨ğŸ‡º'],
		CV: ['Cape Verde', 'ğŸ‡¨ğŸ‡»'],
		CW: ['CuraÃ§ao', 'ğŸ‡¨ğŸ‡¼'],
		CX: ['Christmas Island', 'ğŸ‡¨ğŸ‡½'],
		CY: ['Cyprus', 'ğŸ‡¨ğŸ‡¾'],
		CZ: ['Czechia', 'ğŸ‡¨ğŸ‡¿'],
		DE: ['Germany', 'ğŸ‡©ğŸ‡ª'],
		DG: ['Diego Garcia', 'ğŸ‡©ğŸ‡¬'],
		DJ: ['Djibouti', 'ğŸ‡©ğŸ‡¯'],
		DK: ['Denmark', 'ğŸ‡©ğŸ‡°'],
		DM: ['Dominica', 'ğŸ‡©ğŸ‡²'],
		DO: ['Dominican Republic', 'ğŸ‡©ğŸ‡´'],
		DZ: ['Algeria', 'ğŸ‡©ğŸ‡¿'],
		EA: ['Ceuta & Melilla', 'ğŸ‡ªğŸ‡¦'],
		EC: ['Ecuador', 'ğŸ‡ªğŸ‡¨'],
		EE: ['Estonia', 'ğŸ‡ªğŸ‡ª'],
		EG: ['Egypt', 'ğŸ‡ªğŸ‡¬'],
		EH: ['Western Sahara', 'ğŸ‡ªğŸ‡­'],
		ER: ['Eritrea', 'ğŸ‡ªğŸ‡·'],
		ES: ['Spain', 'ğŸ‡ªğŸ‡¸'],
		ET: ['Ethiopia', 'ğŸ‡ªğŸ‡¹'],
		EU: ['European Union', 'ğŸ‡ªğŸ‡º'],
		FI: ['Finland', 'ğŸ‡«ğŸ‡®'],
		FJ: ['Fiji', 'ğŸ‡«ğŸ‡¯'],
		FK: ['Falkland Islands', 'ğŸ‡«ğŸ‡°'],
		FM: ['Micronesia', 'ğŸ‡«ğŸ‡²'],
		FO: ['Faroe Islands', 'ğŸ‡«ğŸ‡´'],
		FR: ['France', 'ğŸ‡«ğŸ‡·'],
		GA: ['Gabon', 'ğŸ‡¬ğŸ‡¦'],
		GB: ['United Kingdom', 'ğŸ‡¬ğŸ‡§'],
		GD: ['Grenada', 'ğŸ‡¬ğŸ‡©'],
		GE: ['Georgia', 'ğŸ‡¬ğŸ‡ª'],
		GF: ['French Guiana', 'ğŸ‡¬ğŸ‡«'],
		GG: ['Guernsey', 'ğŸ‡¬ğŸ‡¬'],
		GH: ['Ghana', 'ğŸ‡¬ğŸ‡­'],
		GI: ['Gibraltar', 'ğŸ‡¬ğŸ‡®'],
		GL: ['Greenland', 'ğŸ‡¬ğŸ‡±'],
		GM: ['Gambia', 'ğŸ‡¬ğŸ‡²'],
		GN: ['Guinea', 'ğŸ‡¬ğŸ‡³'],
		GP: ['Guadeloupe', 'ğŸ‡¬ğŸ‡µ'],
		GQ: ['Equatorial Guinea', 'ğŸ‡¬ğŸ‡¶'],
		GR: ['Greece', 'ğŸ‡¬ğŸ‡·'],
		GS: ['South Georgia & South Sandwich Islands', 'ğŸ‡¬ğŸ‡¸'],
		GT: ['Guatemala', 'ğŸ‡¬ğŸ‡¹'],
		GU: ['Guam', 'ğŸ‡¬ğŸ‡º'],
		GW: ['Guinea-Bissau', 'ğŸ‡¬ğŸ‡¼'],
		GY: ['Guyana', 'ğŸ‡¬ğŸ‡¾'],
		HK: ['Hong Kong SAR China', 'ğŸ‡­ğŸ‡°'],
		HM: ['Heard & McDonald Islands', 'ğŸ‡­ğŸ‡²'],
		HN: ['Honduras', 'ğŸ‡­ğŸ‡³'],
		HR: ['Croatia', 'ğŸ‡­ğŸ‡·'],
		HT: ['Haiti', 'ğŸ‡­ğŸ‡¹'],
		HU: ['Hungary', 'ğŸ‡­ğŸ‡º'],
		IC: ['Canary Islands', 'ğŸ‡®ğŸ‡¨'],
		ID: ['Indonesia', 'ğŸ‡®ğŸ‡©'],
		IE: ['Ireland', 'ğŸ‡®ğŸ‡ª'],
		IL: ['Israel', 'ğŸ‡®ğŸ‡±'],
		IM: ['Isle of Man', 'ğŸ‡®ğŸ‡²'],
		IN: ['India', 'ğŸ‡®ğŸ‡³'],
		IO: ['British Indian Ocean Territory', 'ğŸ‡®ğŸ‡´'],
		IQ: ['Iraq', 'ğŸ‡®ğŸ‡¶'],
		IR: ['Iran', 'ğŸ‡®ğŸ‡·'],
		IS: ['Iceland', 'ğŸ‡®ğŸ‡¸'],
		IT: ['Italy', 'ğŸ‡®ğŸ‡¹'],
		JE: ['Jersey', 'ğŸ‡¯ğŸ‡ª'],
		JM: ['Jamaica', 'ğŸ‡¯ğŸ‡²'],
		JO: ['Jordan', 'ğŸ‡¯ğŸ‡´'],
		JP: ['Japan', 'ğŸ‡¯ğŸ‡µ'],
		KE: ['Kenya', 'ğŸ‡°ğŸ‡ª'],
		KG: ['Kyrgyzstan', 'ğŸ‡°ğŸ‡¬'],
		KH: ['Cambodia', 'ğŸ‡°ğŸ‡­'],
		KI: ['Kiribati', 'ğŸ‡°ğŸ‡®'],
		KM: ['Comoros', 'ğŸ‡°ğŸ‡²'],
		KN: ['St. Kitts & Nevis', 'ğŸ‡°ğŸ‡³'],
		KP: ['North Korea', 'ğŸ‡°ğŸ‡µ'],
		KR: ['South Korea', 'ğŸ‡°ğŸ‡·'],
		KW: ['Kuwait', 'ğŸ‡°ğŸ‡¼'],
		KY: ['Cayman Islands', 'ğŸ‡°ğŸ‡¾'],
		KZ: ['Kazakhstan', 'ğŸ‡°ğŸ‡¿'],
		LA: ['Laos', 'ğŸ‡±ğŸ‡¦'],
		LB: ['Lebanon', 'ğŸ‡±ğŸ‡§'],
		LC: ['St. Lucia', 'ğŸ‡±ğŸ‡¨'],
		LI: ['Liechtenstein', 'ğŸ‡±ğŸ‡®'],
		LK: ['Sri Lanka', 'ğŸ‡±ğŸ‡°'],
		LR: ['Liberia', 'ğŸ‡±ğŸ‡·'],
		LS: ['Lesotho', 'ğŸ‡±ğŸ‡¸'],
		LT: ['Lithuania', 'ğŸ‡±ğŸ‡¹'],
		LU: ['Luxembourg', 'ğŸ‡±ğŸ‡º'],
		LV: ['Latvia', 'ğŸ‡±ğŸ‡»'],
		LY: ['Libya', 'ğŸ‡±ğŸ‡¾'],
		MA: ['Morocco', 'ğŸ‡²ğŸ‡¦'],
		MC: ['Monaco', 'ğŸ‡²ğŸ‡¨'],
		MD: ['Moldova', 'ğŸ‡²ğŸ‡©'],
		ME: ['Montenegro', 'ğŸ‡²ğŸ‡ª'],
		MF: ['St. Martin', 'ğŸ‡²ğŸ‡«'],
		MG: ['Madagascar', 'ğŸ‡²ğŸ‡¬'],
		MH: ['Marshall Islands', 'ğŸ‡²ğŸ‡­'],
		MK: ['North Macedonia', 'ğŸ‡²ğŸ‡°'],
		ML: ['Mali', 'ğŸ‡²ğŸ‡±'],
		MM: ['Myanmar (Burma)', 'ğŸ‡²ğŸ‡²'],
		MN: ['Mongolia', 'ğŸ‡²ğŸ‡³'],
		MO: ['Macao SAR China', 'ğŸ‡²ğŸ‡´'],
		MP: ['Northern Mariana Islands', 'ğŸ‡²ğŸ‡µ'],
		MQ: ['Martinique', 'ğŸ‡²ğŸ‡¶'],
		MR: ['Mauritania', 'ğŸ‡²ğŸ‡·'],
		MS: ['Montserrat', 'ğŸ‡²ğŸ‡¸'],
		MT: ['Malta', 'ğŸ‡²ğŸ‡¹'],
		MU: ['Mauritius', 'ğŸ‡²ğŸ‡º'],
		MV: ['Maldives', 'ğŸ‡²ğŸ‡»'],
		MW: ['Malawi', 'ğŸ‡²ğŸ‡¼'],
		MX: ['Mexico', 'ğŸ‡²ğŸ‡½'],
		MY: ['Malaysia', 'ğŸ‡²ğŸ‡¾'],
		MZ: ['Mozambique', 'ğŸ‡²ğŸ‡¿'],
		NA: ['Namibia', 'ğŸ‡³ğŸ‡¦'],
		NC: ['New Caledonia', 'ğŸ‡³ğŸ‡¨'],
		NE: ['Niger', 'ğŸ‡³ğŸ‡ª'],
		NF: ['Norfolk Island', 'ğŸ‡³ğŸ‡«'],
		NG: ['Nigeria', 'ğŸ‡³ğŸ‡¬'],
		NI: ['Nicaragua', 'ğŸ‡³ğŸ‡®'],
		NL: ['Netherlands', 'ğŸ‡³ğŸ‡±'],
		NO: ['Norway', 'ğŸ‡³ğŸ‡´'],
		NP: ['Nepal', 'ğŸ‡³ğŸ‡µ'],
		NR: ['Nauru', 'ğŸ‡³ğŸ‡·'],
		NU: ['Niue', 'ğŸ‡³ğŸ‡º'],
		NZ: ['New Zealand', 'ğŸ‡³ğŸ‡¿'],
		OM: ['Oman', 'ğŸ‡´ğŸ‡²'],
		PA: ['Panama', 'ğŸ‡µğŸ‡¦'],
		PE: ['Peru', 'ğŸ‡µğŸ‡ª'],
		PF: ['French Polynesia', 'ğŸ‡µğŸ‡«'],
		PG: ['Papua New Guinea', 'ğŸ‡µğŸ‡¬'],
		PH: ['Philippines', 'ğŸ‡µğŸ‡­'],
		PK: ['Pakistan', 'ğŸ‡µğŸ‡°'],
		PL: ['Poland', 'ğŸ‡µğŸ‡±'],
		PM: ['St. Pierre & Miquelon', 'ğŸ‡µğŸ‡²'],
		PN: ['Pitcairn Islands', 'ğŸ‡µğŸ‡³'],
		PR: ['Puerto Rico', 'ğŸ‡µğŸ‡·'],
		PS: ['Palestinian Territories', 'ğŸ‡µğŸ‡¸'],
		PT: ['Portugal', 'ğŸ‡µğŸ‡¹'],
		PW: ['Palau', 'ğŸ‡µğŸ‡¼'],
		PY: ['Paraguay', 'ğŸ‡µğŸ‡¾'],
		QA: ['Qatar', 'ğŸ‡¶ğŸ‡¦'],
		RE: ['RÃ©union', 'ğŸ‡·ğŸ‡ª'],
		RO: ['Romania', 'ğŸ‡·ğŸ‡´'],
		RS: ['Serbia', 'ğŸ‡·ğŸ‡¸'],
		RU: ['Russia', 'ğŸ‡·ğŸ‡º'],
		RW: ['Rwanda', 'ğŸ‡·ğŸ‡¼'],
		SA: ['Saudi Arabia', 'ğŸ‡¸ğŸ‡¦'],
		SB: ['Solomon Islands', 'ğŸ‡¸ğŸ‡§'],
		SC: ['Seychelles', 'ğŸ‡¸ğŸ‡¨'],
		SD: ['Sudan', 'ğŸ‡¸ğŸ‡©'],
		SE: ['Sweden', 'ğŸ‡¸ğŸ‡ª'],
		SG: ['Singapore', 'ğŸ‡¸ğŸ‡¬'],
		SH: ['St. Helena', 'ğŸ‡¸ğŸ‡­'],
		SI: ['Slovenia', 'ğŸ‡¸ğŸ‡®'],
		SJ: ['Svalbard & Jan Mayen', 'ğŸ‡¸ğŸ‡¯'],
		SK: ['Slovakia', 'ğŸ‡¸ğŸ‡°'],
		SL: ['Sierra Leone', 'ğŸ‡¸ğŸ‡±'],
		SM: ['San Marino', 'ğŸ‡¸ğŸ‡²'],
		SN: ['Senegal', 'ğŸ‡¸ğŸ‡³'],
		SO: ['Somalia', 'ğŸ‡¸ğŸ‡´'],
		SR: ['Suriname', 'ğŸ‡¸ğŸ‡·'],
		SS: ['South Sudan', 'ğŸ‡¸ğŸ‡¸'],
		ST: ['SÃ£o TomÃ© & PrÃ­ncipe', 'ğŸ‡¸ğŸ‡¹'],
		SV: ['El Salvador', 'ğŸ‡¸ğŸ‡»'],
		SX: ['Sint Maarten', 'ğŸ‡¸ğŸ‡½'],
		SY: ['Syria', 'ğŸ‡¸ğŸ‡¾'],
		SZ: ['Eswatini', 'ğŸ‡¸ğŸ‡¿'],
		TA: ['Tristan da Cunha', 'ğŸ‡¹ğŸ‡¦'],
		TC: ['Turks & Caicos Islands', 'ğŸ‡¹ğŸ‡¨'],
		TD: ['Chad', 'ğŸ‡¹ğŸ‡©'],
		TF: ['French Southern Territories', 'ğŸ‡¹ğŸ‡«'],
		TG: ['Togo', 'ğŸ‡¹ğŸ‡¬'],
		TH: ['Thailand', 'ğŸ‡¹ğŸ‡­'],
		TJ: ['Tajikistan', 'ğŸ‡¹ğŸ‡¯'],
		TK: ['Tokelau', 'ğŸ‡¹ğŸ‡°'],
		TL: ['Timor-Leste', 'ğŸ‡¹ğŸ‡±'],
		TM: ['Turkmenistan', 'ğŸ‡¹ğŸ‡²'],
		TN: ['Tunisia', 'ğŸ‡¹ğŸ‡³'],
		TO: ['Tonga', 'ğŸ‡¹ğŸ‡´'],
		TR: ['TÃ¼rkiye', 'ğŸ‡¹ğŸ‡·'],
		TT: ['Trinidad & Tobago', 'ğŸ‡¹ğŸ‡¹'],
		TV: ['Tuvalu', 'ğŸ‡¹ğŸ‡»'],
		TW: ['Taiwan', 'ğŸ‡¹ğŸ‡¼'],
		TZ: ['Tanzania', 'ğŸ‡¹ğŸ‡¿'],
		UA: ['Ukraine', 'ğŸ‡ºğŸ‡¦'],
		UG: ['Uganda', 'ğŸ‡ºğŸ‡¬'],
		UM: ['U.S. Outlying Islands', 'ğŸ‡ºğŸ‡²'],
		UN: ['United Nations', 'ğŸ‡ºğŸ‡³'],
		US: ['United States', 'ğŸ‡ºğŸ‡¸'],
		UY: ['Uruguay', 'ğŸ‡ºğŸ‡¾'],
		UZ: ['Uzbekistan', 'ğŸ‡ºğŸ‡¿'],
		VA: ['Vatican City', 'ğŸ‡»ğŸ‡¦'],
		VC: ['St. Vincent & Grenadines', 'ğŸ‡»ğŸ‡¨'],
		VE: ['Venezuela', 'ğŸ‡»ğŸ‡ª'],
		VG: ['British Virgin Islands', 'ğŸ‡»ğŸ‡¬'],
		VI: ['U.S. Virgin Islands', 'ğŸ‡»ğŸ‡®'],
		VN: ['Vietnam', 'ğŸ‡»ğŸ‡³'],
		VU: ['Vanuatu', 'ğŸ‡»ğŸ‡º'],
		WF: ['Wallis & Futuna', 'ğŸ‡¼ğŸ‡«'],
		WS: ['Samoa', 'ğŸ‡¼ğŸ‡¸'],
		XK: ['Kosovo', 'ğŸ‡½ğŸ‡°'],
		YE: ['Yemen', 'ğŸ‡¾ğŸ‡ª'],
		YT: ['Mayotte', 'ğŸ‡¾ğŸ‡¹'],
		ZA: ['South Africa', 'ğŸ‡¿ğŸ‡¦'],
		ZM: ['Zambia', 'ğŸ‡¿ğŸ‡²'],
		ZW: ['Zimbabwe', 'ğŸ‡¿ğŸ‡¼'],
	};

	static getName(countryCode) {
		return this.list[countryCode]?.[0];
	}

	static getFlag(countryCode) {
		return this.list[countryCode]?.[1];
	}
}

function getActiveServers(withPlayers) {
	const gameTypes = ['TO340', 'TO350'];
	Promise
		.all(
			gameTypes.map(t => _333NetworksAPI.getServerList(t))
		)
		.then(function(responses) {
			let servers = [].concat(
				...responses.map(r => Array.isArray(r) ? r[0] : [])
			);
			console.log('All servers ->', servers);
			if (withPlayers) {
				servers = servers.filter(({numplayers}) => numplayers > 0);
				console.log('With players only ->', servers);
			}
			console.table(
				servers
					.sort((a, b) => b.numplayers - a.numplayers)
					.map(
						function({country, ip, hostport, hostname, gametype, numplayers, maxplayers, mapname}) {
							return [
								Countries.getFlag(country),
								`${ip}:${hostport}`,
								hostname,
								(gametype === 'TO340') ? 'TO 3.4' : 'TO 3.5',
								`${numplayers}/${maxplayers}`,
								mapname,
							];
						}
					)
			)
		});
}

window.onload = function() {
	ui.init();
	console.log(ui.settings.getParams());

	getActiveServers();
};